import { ApiProperty, PickType } from "@nestjs/swagger";
import { Microservice } from "@/api/v1/microservice/entities/microservice.entity";

// –í—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã - ID –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞
export class RefreshMicroserviceDto extends PickType(Microservice, ["id"]) {}

// –í—ã—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã - —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
export class RefreshMicroserviceResponseDto {
    @ApiProperty({
        description: "–£—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏",
        example: true,
    })
    success: boolean;

    @ApiProperty({
        description: "–°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ",
        example: "Schema updated successfully",
    })
    message: string;

    @ApiProperty({
        description: "–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Å—Ö–µ–º—ã (–µ—Å–ª–∏ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞)",
        example: 5,
        required: false,
    })
    version?: number;

    @ApiProperty({
        description: "–ë—ã–ª –ª–∏ —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Å–Ω–∞–ø—à–æ—Ç —Å—Ö–µ–º—ã",
        example: true,
    })
    updated: boolean;

    @ApiProperty({
        description: "Changelog –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–ª—è Telegram (–µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è)",
        example:
            "üìã *User Service* \\(v2\\)\n\nüìä *–°–≤–æ–¥–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π:*\n‚Ä¢ ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ: 2\n‚Ä¢ ‚ùå –£–¥–∞–ª–µ–Ω–æ: 0\n‚Ä¢ üîÑ –ò–∑–º–µ–Ω–µ–Ω–æ: 1",
        required: false,
    })
    changelog?: string;

    @ApiProperty({
        description: "–°–≤–æ–¥–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π",
        example: { added: 2, removed: 0, modified: 1 },
        required: false,
    })
    summary?: {
        added: number;
        removed: number;
        modified: number;
    };
}
